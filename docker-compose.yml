# MSGF case study
# Configuration for running with docker compose 

version: '3.3'

services:
  bpm_engine_db:
    image: postgres:16.2
    container_name: bpm_engine_db
    user: postgres
    environment:
      POSTGRES_DB: bpm_engine
#      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - bpm_engine_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  credit_request_db:
    image: postgres:16.2
    container_name: credit_request_db
    user: postgres
    environment:
      POSTGRES_DB: credit_request
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432"
    volumes:
      - credit_request_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  bpm_engine:
    build:
      context: .
      dockerfile: dockerfiles/dockerfile-engine
    container_name: bpm_engine
    ports:
      - "9000:9000"
    # volumes:
    #  - ./BPM-Engine:/app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://bpm_engine_db:5432/bpm_engine
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      CAMUNDA_BPM_DATABASE_TYPE: postgres
      CAMUNDA_BPM_DATABASE_SCHEMA_UPDATE: true
      CAMUNDA_BPM_ADMIN_USER_ID: demo
      CAMUNDA_BPM_ADMIN_USER_PASSWORD: demo
      LOGGING_LEVEL_ORG_CAMUNDA_BPM_ENGINE_IMPL_PERSISTENCE_ENTITY: DEBUG
      LOGGING_LEVEL_ORG_CAMUNDA_BPM_ENGINE_IMPL_HISTORY_EVENT: TRACE
      SERVER_PORT: 9000
      EMAIL_ADDRESS: securedigitaldocs@gmail.com
      EMAIL_PASSWORD: bsqdckybksteviio

    depends_on:
      bpm_engine_db:
          condition: service_healthy
      credit_request_db:
          condition: service_healthy
    networks:
      - my_network

  credit_request:
    build:
      context: .
      dockerfile: dockerfiles/dockerfile-creditrequest
    container_name: credit_request
    ports:
      - "9001:9001"
    # volumes:
    #  - ./CreditRequest:/app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://credit_request_db:5432/credit_request
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      CAMUNDA_URL: http://bpm_engine:9000/engine-rest/
      SERVER_PORT: 9001
      SPRING_SERVLET_MULTIPART_ENABLED: true
      SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE: 10MB
      SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE: 10MB
      AWS_ACESSKEYID: AKIAZ5QPPV4XJQGX6IO7
      AWS_SECRETKEY: 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
    depends_on:
      credit_request_db:
        condition: service_healthy
    networks:
      - my_network
#
  central_sys:
    build:
      context: .
      dockerfile: dockerfiles/dockerfile-centralsys
    container_name: central_sys
    ports:
      - "9003:9003"
    # volumes:
    #   - ./CentralSys:/app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://credit_request_db:5432/credit_request
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      CAMUNDA_URL: http://bpm_engine:9000/engine-rest/
      SERVER_PORT: 9003
      SERVER_ERROR_WHITELABEL_ENABLED: false
    depends_on:
      credit_request_db:
        condition: service_healthy
    networks:
      - my_network

  treasury:
    build:
      context: .
      dockerfile: dockerfiles/dockerfile-treasury
    container_name: treasury
    ports:
      - "9004:9004"
    # volumes:
    #  - ./CreditRequest:/app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://credit_request_db:5432/credit_request
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      CAMUNDA.URL: http://bpm_engine:9000/engine-rest/
      SERVER_PORT: 9001
      EMAIL_ADDRESS: securedigitaldocs@gmail.com
      EMAIL_PASSWORD: bsqdckybksteviio
    depends_on:
      credit_request_db:
        condition: service_healthy
    networks:
      - my_network
volumes:
  bpm_engine_data:
  credit_request_data:

networks:
  my_network: